(window.webpackJsonp=window.webpackJsonp||[]).push([[58],{430:function(v,_,t){"use strict";t.r(_);var a=t(42),s=Object(a.a)({},(function(){var v=this,_=v.$createElement,t=v._self._c||_;return t("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[t("h1",{attrs:{id:"如何学习"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#如何学习"}},[v._v("#")]),v._v(" 如何学习")]),v._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[v._v("本文全部文字摘自左耳朵耗子的左耳听风专栏，高效学习5讲。\n总结起来其实还是老生常谈的坚持不懈和善于思考，但我觉得仍值得摘下来反复阅读。\n")])])]),t("p",[v._v("学习是一件"),t("strong",[v._v("反人性")]),v._v("的事情，就像锻炼身体一样，不要有急于求成的想法，需要人持续付出，会让人感到痛苦，并随时想找理由放弃。")]),v._v(" "),t("p",[v._v("如果你不能克服自己 DNA 中的弱点，不能端正自己的态度，不能自律，不能坚持，不能举一反三，不能不断追问等，那么，无论有多好的方法，你都不可能学好。所以，有正确的态度很重要。")]),v._v(" "),t("h2",{attrs:{id:"主动学习和被动学习"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#主动学习和被动学习"}},[v._v("#")]),v._v(" 主动学习和被动学习")]),v._v(" "),t("p",[t("img",{attrs:{src:"https://i.loli.net/2021/04/09/hi9szfqa3XPZIkC.png",alt:"image-20210409151004339"}})]),v._v(" "),t("p",[v._v("人的学习分为「被动学习」和「主动学习」两个层次。")]),v._v(" "),t("ul",[t("li",[v._v("被动学习：如听讲、阅读、视听、演示，学习内容的平均留存率为 5%、10%、20% 和 30%。")]),v._v(" "),t("li",[v._v("主动学习：如通过讨论、实践、教授给他人，会将原来被动学习的内容留存率从 5% 提升到 50%、75% 和 90%")])]),v._v(" "),t("p",[v._v("这个模型很好地展示了不同学习深度和层次之间的对比。\n我们可以看到，你听别人讲，或是自己看书，或是让别人演示给你，这些都不能让你真正获得学习能力，因为你是在被别人灌输，在听别人说。\n"),t("strong",[v._v("只有你开始自己思考，开始自己总结和归纳，开始找人交流讨论，开始践行，并开始对外输出，你才会掌握到真正的学习能力。")])]),v._v(" "),t("p",[t("strong",[v._v("所以，学习不是努力读更多的书，盲目追求阅读的速度和数量，这会让人产生低层次的勤奋和成长的感觉，这只是在使蛮力。要思辨，要践行，要总结和归纳，否则，你只是在机械地重复某件事，而不会有质的成长的。")])]),v._v(" "),t("h2",{attrs:{id:"浅度学习和深度学习"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#浅度学习和深度学习"}},[v._v("#")]),v._v(" 浅度学习和深度学习")]),v._v(" "),t("p",[v._v("当前这个社会：")]),v._v(" "),t("ul",[t("li",[v._v("大多数人的信息渠道都被微信朋友圈、微博、知乎、今日头条、抖音占据着。这些信息渠道中有营养的信息少之又少。")]),v._v(" "),t("li",[v._v("大多数公司都是实行类似于 996 这样的加班文化，在透支和消耗着下一代年轻人，让他们成长不起来。")]),v._v(" "),t("li",[v._v("因为国内互联网访问不通畅，加上英文水平受限，所以，大多数人根本没法获取到国外的第一手信息。")]),v._v(" "),t("li",[v._v("快餐文化盛行，绝大多数人都急于速成，心态比较浮燥，对事物不求甚解。")])]),v._v(" "),t("p",[v._v("只要你保持着正常学习，就已经超越了大多数人了。")]),v._v(" "),t("p",[v._v("少数的精英人士，他们在训练自己获取知识的能力，他们到源头查看第一手的资料，然后，深度钻研，并通过自己的思考后，生产更好的内容。而绝大部分受众享受轻度学习，消费内容。久而久之，人就丧失了自主学习的能力，等待精英人士的输出。")]),v._v(" "),t("h3",{attrs:{id:"如何进入深度学习"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#如何进入深度学习"}},[v._v("#")]),v._v(" 如何进入深度学习")]),v._v(" "),t("ul",[t("li",[t("strong",[v._v("知识采集。信息源是非常重要的，获取信息源头、破解表面信息的内在本质、多方数据印证，是这个步骤的关键。")])]),v._v(" "),t("li",[t("strong",[v._v("知识缝合。所谓缝合就是把信息组织起来，成为结构体的知识。这里，连接记忆，逻辑推理，知识梳理是很重要的三部分。")])]),v._v(" "),t("li",[t("strong",[v._v("技能转换。通过举一反三、实践和练习，以及传授教导，把知识转化成自己的技能。这种技能可以让你进入更高的阶层。")])])]),v._v(" "),t("h2",{attrs:{id:"学习方法和技巧"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#学习方法和技巧"}},[v._v("#")]),v._v(" 学习方法和技巧")]),v._v(" "),t("h3",{attrs:{id:"学习是为了找到方法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#学习是为了找到方法"}},[v._v("#")]),v._v(" 学习是为了找到方法")]),v._v(" "),t("p",[t("strong",[v._v("学习不仅仅是为了找到答案，而更是为了找到方法")]),v._v("。只有掌握解题的思路和方法，你才算得上拥有解决问题的能力。所有的练习，所有的答案，其实都是在引导你去寻找一种“以不变应万变”的方法或能力。在这种能力下，你不需要知道答案，因为你可以用这种方法很快找到答案，找到解，甚至可以通过这样的方式找到最优解或最优雅的答案。")]),v._v(" "),t("p",[v._v("这就好像，你要去登一座山，一种方法是通过别人修好的路爬上去，一种是通过自己的技能找到路（或是自己修一条路）爬上去。也就是说，需要有路才爬得上山的人，和没有路能造路的人相比，后者的能力就会比前者大得多得多。"),t("strong",[v._v("所以，学习是为了找到通往答案的路径和方法，是为了拥有无师自通的能力。")])]),v._v(" "),t("h3",{attrs:{id:"学习是为了找到原理"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#学习是为了找到原理"}},[v._v("#")]),v._v(" 学习是为了找到原理")]),v._v(" "),t("p",[v._v("学习不仅仅是为了知道，而更是为了思考和理解。在学习的过程中，我们不是为了知道某个事的表面是什么，而是要通过表象去探索其内在的本质和原理。真正的学习，从来都不是很轻松的，而是那种你知道得越多，你的问题就会越多，你的问题越多，你就会思考得越多，你思考得越多，你就会越觉得自己知道得越少，于是你就会想要了解更多。如此循环，是这么一种螺旋上升上下求索的状态。")]),v._v(" "),t("h3",{attrs:{id:"学习是为了了解自己"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#学习是为了了解自己"}},[v._v("#")]),v._v(" 学习是为了了解自己")]),v._v(" "),t("p",[t("strong",[v._v("学习不仅仅是为了开拓眼界，而更是为了找到自己的未知，为了了解自己")]),v._v("。英文中有句话叫：You do not know what you do not know，可以翻译为：你不知道你不知道的东西。也就是说，你永远不会去学习你不知道其存在的东西。就好像你永远 Google 不出来你不知道的事，因为对于你不知道的事，你不知道用什么样的关键词，你不知道关键词，你就找不到你想要的知识。")]),v._v(" "),t("p",[t("strong",[v._v("开拓眼界的目的就是发现自己的不足和上升空间，从而才能让自己成长。")])]),v._v(" "),t("h3",{attrs:{id:"学习是为了改变自己"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#学习是为了改变自己"}},[v._v("#")]),v._v(" 学习是为了改变自己")]),v._v(" "),t("p",[v._v("当你有一天知道了逻辑中的充要条件或是因果关系后，你会发现使用这样的方式来思考问题时，你比以往更接近问题的真相。"),t("strong",[v._v("学习是为了改变自己的思考方式，改变自己的思维方式，改变自己与生俱来的那些垃圾和低效的算法。总之，学习让我们改变自己，行动和践行，反思和改善，从而获得成长。")])]),v._v(" "),t("h2",{attrs:{id:"进行系统的学习"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#进行系统的学习"}},[v._v("#")]),v._v(" 进行系统的学习")]),v._v(" "),t("h3",{attrs:{id:"形成知识脑图"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#形成知识脑图"}},[v._v("#")]),v._v(" 形成知识脑图")]),v._v(" "),t("p",[v._v("在学习技术的过程一定要多问自己两个问题：“一，这个技术解决什么问题？为什么别的同类技术做不到？二，为什么是这样解决的？有没有更好的方式？")]),v._v(" "),t("p",[v._v("在学习某个技术的时候，要形成了一个更高层的知识脑图。")]),v._v(" "),t("ul",[t("li",[t("strong",[v._v("这个技术出现的背景、初衷和要达到什么样的目标或是要解决什么样的问题")]),v._v("。这个问题非常关键，也就是说，你在学习一个技术的时候，需要知道这个技术的成因和目标，也就是这个技术的灵魂。如果不知道这些的话，那么你会看不懂这个技术的一些设计理念。")]),v._v(" "),t("li",[t("strong",[v._v("这个技术的优势和劣势分别是什么")]),v._v("，或者说，这个技术的 trade-off 是什么。任何技术都有其好坏，在解决一个问题的时候，也会带来新的问题。另外，一般来说，任何设计都有 trade-off（要什么和不要什么），所以，你要清楚这个技术的优势和劣势，以及带来的挑战。")]),v._v(" "),t("li",[t("strong",[v._v("这个技术适用的场景")]),v._v("。任何技术都有其适用的场景，离开了这个场景，这个技术可能会有很多槽点，所以学习技术不但要知道这个技术是什么，还要知道其适用的场景。没有任何一个技术是普适的。注意，所谓场景一般分别两个，一个是"),t("code",[v._v("业务场景")]),v._v("，一个是"),t("code",[v._v("技术场景")]),v._v("。")]),v._v(" "),t("li",[t("strong",[v._v("技术的组成部分和关键点")]),v._v("这。是技术的核心思想和核心组件了，也是这个技术的灵魂所在了。学习技术的核心部分是快速掌握的关键。")]),v._v(" "),t("li",[t("strong",[v._v("技术的底层原理和关键实现。")]),v._v("。任何一个技术都有其底层的关键基础技术，这些关键技术很有可能也是其它技术的关键基础技术。所以，学习这些关键的基础底层技术，可以让你未来很快地掌握其它技术。")]),v._v(" "),t("li",[t("strong",[v._v("已有的实现和它之间的对比")]),v._v("。一般来说，任何一个技术都会有不同的实现，不同的实现都会有不同的侧重。学习不同的实现，可以让你得到不同的想法和思路，对于开阔思维，深入细节是非常重要的。")])]),v._v(" "),t("h3",{attrs:{id:"总结和归纳"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#总结和归纳"}},[v._v("#")]),v._v(" 总结和归纳")]),v._v(" "),t("p",[t("strong",[v._v("我们积累的知识越多，在知识间进行联系和区辨的能力就越强，对知识进行总结和归纳也就越轻松")]),v._v("。而想要提高总结归纳的能力，首先要多阅读，多积累素材，扩大自己的知识面，多和别人讨论，多思辨，从而见多识广。")]),v._v(" "),t("p",[v._v("不过，我们需要注意的是，如果只学了部分知识或者还没有学透，就开始对知识进行总结归纳，那么总结归纳出来的知识结构也只能是混乱和幼稚的。因此，"),t("strong",[v._v("学习的开始阶段，可以不急于总结归纳，不急于下判断，做结论，而应该保留部分知识的不确定性，保持对知识的开放状态")]),v._v("。当对整个知识的理解更深入，自己站的位置更高以后，总结和归纳才会更有条理。总结归纳更多是在复习中对知识的回顾和重组，而不是一边学习一边就总结归纳。")]),v._v(" "),t("p",[v._v("我们来总结一下做总结归纳的方法："),t("strong",[v._v("把你看到和学习到的信息，归整好，排列好，关联好，总之把信息碎片给结构化掉，然后在结构化的信息中，找到规律，找到相通之处，找到共同之处，进行简化、归纳和总结，最终形成一种套路，一种模式，一种通用方法。")])]),v._v(" "),t("p",[v._v("要训练自己这方面的能力，你需要多看一些经典的方法论图书，看看别人是怎样总结和归纳知识的。你可以在一开始模仿并把自己的理解的知识给写出来，写博客会是一种很好的方式。另外一种更好的方式是讲一遍给别人听。总之，你需要把你总结归纳的知识公开出来，给别人看，接受别人的批评和反馈，这样你才能成长得更快。")]),v._v(" "),t("h3",{attrs:{id:"实践出真知"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#实践出真知"}},[v._v("#")]),v._v(" 实践出真知")]),v._v(" "),t("p",[v._v("实践是很累很痛苦的事，但只有痛苦才会让人反思，而反思则是学习和改变自己的动力。Grow up through the pain， 是非常有道理的。")]),v._v(" "),t("h3",{attrs:{id:"坚持不懈"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#坚持不懈"}},[v._v("#")]),v._v(" 坚持不懈")]),v._v(" "),t("p",[v._v("坚持不是要苦苦地坚持，有循环有成就感的坚持才是真正可以持续的。\n所以，"),t("strong",[v._v("一方面你要把你的坚持形成成果晒出来，让别人来给你点赞，\n另一方面，你还要把坚持变成一种习惯，就像吃饭喝水一样，你感觉不到太多的成本付出。只有做到这两点，你才能够真正坚持。")])]),v._v(" "),t("h2",{attrs:{id:"如何阅读源码"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#如何阅读源码"}},[v._v("#")]),v._v(" 如何阅读源码")]),v._v(" "),t("p",[v._v("在阅读代码之前，需要有下面的这些前提再去阅读代码，这样读起代码来会很顺畅。")]),v._v(" "),t("ol",[t("li",[t("strong",[v._v("接口抽象定义")]),v._v("。任何代码都会有很多接口或抽象定义，其描述了代码需要处理的数据结构或者业务实体，以及它们之间的关系，理清楚这些关系是非常重要的。")]),v._v(" "),t("li",[t("strong",[v._v("模块粘合层")]),v._v("。我们的代码有很多都是用来粘合代码的，比如中间件（middleware）、Promises 模式、回调（Callback）、代理委托、依赖注入等。这些代码模块间的粘合技术是非常重要的，因为它们会把本来平铺直述的代码给分裂开来，让你不容易看明白它们的关系。")]),v._v(" "),t("li",[t("strong",[v._v("业务流程")]),v._v("。这是代码运行的过程。一开始，我们不要进入细节，但需要在高层搞清楚整个业务的流程是什么样的，在这个流程中，数据是怎么被传递和处理的。一般来说，我们需要画程序流程图或者时序处理图。")]),v._v(" "),t("li",[t("strong",[v._v("具体实现")]),v._v("。了解上述的三个方面的内容，相信你对整个代码的框架和逻辑已经有了总体认识。这个时候，你就可以深入细节，开始阅读具体实现的代码了。对于代码的具体实现，一般来说，你需要知道下面一些事实，这样有助于你在阅读代码时找到重点。\n"),t("ul",[t("li",[t("strong",[v._v("代码逻辑")]),v._v("。代码有两种逻辑，一种是业务逻辑，这种逻辑是真正的业务处理逻辑；另一种是控制逻辑，这种逻辑只是用控制程序流转的，不是业务逻辑。比如：flag 之类的控制变量，多线程处理的代码，异步控制的代码，远程通讯的代码，对象序列化反序列化的代码等。这两种逻辑你要分开，很多代码之所以混乱就是把这两种逻辑混在一起了")]),v._v(" "),t("li",[t("strong",[v._v("出错处理")]),v._v("。根据二八原则，20% 的代码是正常的逻辑，80% 的代码是在处理各种错误，所以，你在读代码的时候，完全可以把处理错误的代码全部删除掉，这样就会留下比较干净和简单的正常逻辑的代码。排除干扰因素，可以更高效地读代码。")]),v._v(" "),t("li",[t("strong",[v._v("数据处理")]),v._v("。只要你认真观察，就会发现，我们好多代码就是在那里倒腾数据。比如 DAO、DTO，比如 JSON、XML，这些代码冗长无聊，不是主要逻辑，可以不理")]),v._v(" "),t("li",[t("strong",[v._v("重要的算法")]),v._v("。一般来说，我们的代码里会有很多重要的算法，我说的并不一定是什么排序或是搜索算法，可能会是一些其它的核心算法，比如一些索引表的算法，全局唯一 ID 的算法、信息推荐的算法、统计算法、通读算法（如 Gossip）等。这些比较核心的算法可能会非常难读，但它们往往是最有技术含量的部分。")]),v._v(" "),t("li",[t("strong",[v._v("底层交互")]),v._v("。有一些代码是和底层系统的交互，一般来说是和操作系统或是 JVM 的交互。因此，读这些代码通常需要一定的底层技术知识，不然，很难读懂。")])])]),v._v(" "),t("li",[t("strong",[v._v("运行时调试")]),v._v("。很多时候，代码只有运行起来了，才能知道具体发生了什么事，所以，我们让代码运行进来，然后用日志也好，debug 设置断点跟踪也好。实际看一下代码的运行过程，是了解代码的一种很好的方式。")])])])}),[],!1,null,null,null);_.default=s.exports}}]);