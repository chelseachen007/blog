(window.webpackJsonp=window.webpackJsonp||[]).push([[226],{607:function(t,e,r){"use strict";r.r(e);var a=r(42),o=Object(a.a)({},(function(){var t=this,e=t.$createElement,r=t._self._c||e;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h1",{attrs:{id:"目录"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#目录"}},[t._v("#")]),t._v(" 目录")]),t._v(" "),r("h3",{attrs:{id:"第一章-先导篇"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#第一章-先导篇"}},[t._v("#")]),t._v(" "),r("a",{attrs:{href:"https://github.com/leetcode-pp/91alg-2/blob/master/introduction.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("第一章 - 先导篇"),r("OutboundLink")],1)]),t._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://github.com/leetcode-pp/91alg-2/blob/master/algo.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("数据结构与算法概述"),r("OutboundLink")],1)]),t._v(" "),r("li",[r("a",{attrs:{href:"https://github.com/leetcode-pp/91alg-2/blob/master/bigO.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("如何衡量算法的性能"),r("OutboundLink")],1)]),t._v(" "),r("li",[r("a",{attrs:{href:"https://www.bilibili.com/video/BV17t4y1i71G",target:"_blank",rel:"noopener noreferrer"}},[t._v("视频 1"),r("OutboundLink")],1)]),t._v(" "),r("li",[r("a",{attrs:{href:"https://www.bilibili.com/video/BV1pa4y1s7g2",target:"_blank",rel:"noopener noreferrer"}},[t._v("视频 2"),r("OutboundLink")],1)])]),t._v(" "),r("h3",{attrs:{id:"第二章-基础篇"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#第二章-基础篇"}},[t._v("#")]),t._v(" "),r("a",{attrs:{href:"https://github.com/leetcode-pp/91alg-2/blob/master/lecture/basic.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("第二章 - 基础篇"),r("OutboundLink")],1)]),t._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://github.com/leetcode-pp/91alg-2/blob/master/lecture/basic-01.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("【91 算法-基础篇】01.数组，栈，队列"),r("OutboundLink")],1)]),t._v(" "),r("li",[r("a",{attrs:{href:"https://github.com/leetcode-pp/91alg-2/blob/master/lecture/basic-02.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("【91 算法-基础篇】02.链表"),r("OutboundLink")],1)]),t._v(" "),r("li",[r("a",{attrs:{href:"https://github.com/leetcode-pp/91alg-2/blob/master/lecture/basic-03.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("【91 算法-基础篇】03.树"),r("OutboundLink")],1)]),t._v(" "),r("li",[r("a",{attrs:{href:"https://github.com/leetcode-pp/91alg-2/blob/master/lecture/basic-04.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("【91 算法-基础篇】04.哈希表"),r("OutboundLink")],1)]),t._v(" "),r("li",[r("a",{attrs:{href:"https://github.com/leetcode-pp/91alg-2/blob/master/lecture/basic-05.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("【91 算法-基础篇】05.双指针"),r("OutboundLink")],1)]),t._v(" "),r("li",[r("a",{attrs:{href:"https://github.com/leetcode-pp/91alg-2/blob/master/lecture/basic-06.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("【91 算法-基础篇】06.图（加餐）"),r("OutboundLink")],1)])]),t._v(" "),r("h3",{attrs:{id:"第三章-进阶篇"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#第三章-进阶篇"}},[t._v("#")]),t._v(" "),r("a",{attrs:{href:"https://github.com/leetcode-pp/91alg-2/blob/master",target:"_blank",rel:"noopener noreferrer"}},[t._v("第三章 - 进阶篇"),r("OutboundLink")],1)]),t._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://github.com/leetcode-pp/91alg-2/blob/master/lecture/advanced-07.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("【91 算法-进阶篇】07.高频面试题"),r("OutboundLink")],1)]),t._v(" "),r("li",[r("a",{attrs:{href:"https://github.com/leetcode-pp/91alg-2/blob/master/lecture/advanced-trie.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("【91 算法-进阶篇】08.Trie"),r("OutboundLink")],1)]),t._v(" "),r("li",[r("a",{attrs:{href:"https://github.com/leetcode-pp/91alg-2/blob/master/lecture/advanced-union-find-set.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("【91 算法-进阶篇】09.并查集 "),r("OutboundLink")],1)]),t._v(" "),r("li",[r("a",{attrs:{href:"https://github.com/leetcode-pp/91alg-2/blob/master/lecture/advanced-skiplist.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("【91 算法-进阶篇】03.跳表"),r("OutboundLink")],1)]),t._v(" "),r("li",[r("a",{attrs:{href:"https://github.com/leetcode-pp/91alg-2/blob/master/lecture/advanced_prune.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("【91 算法-进阶篇】04.剪枝"),r("OutboundLink")],1)])]),t._v(" "),r("h2",{attrs:{id:"做题记录"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#做题记录"}},[t._v("#")]),t._v(" 做题记录")]),t._v(" "),r("ul",[r("li",[t._v("[x] "),r("RouterLink",{attrs:{to:"/leetcode/91day-2/1.html"}},[t._v("【基础篇 - Day 1】 2020-11-01 - 66. 加一（01. 数组，栈，队列 ）")])],1),t._v(" "),r("li",[t._v("[x] "),r("RouterLink",{attrs:{to:"/leetcode/91day-2/2.html"}},[t._v("【基础篇 - Day 2】 2020-11-02 - 821. 字符的最短距离（01. 数组，栈，队列 ）")])],1),t._v(" "),r("li",[t._v("[x] "),r("RouterLink",{attrs:{to:"/leetcode/91day-2/3.html"}},[t._v("【基础篇 - Day 3】 2020-11-03 - 1381. 设计一个支持增量操作的栈（01. 数组，栈，队列 ）")])],1),t._v(" "),r("li",[t._v("[x] "),r("RouterLink",{attrs:{to:"/leetcode/91day-2/4.html"}},[t._v("【基础篇 - Day 4】 2020-11-04 - 394. 字符串解码（01. 数组，栈，队列 ）")])],1),t._v(" "),r("li",[t._v("[x] "),r("RouterLink",{attrs:{to:"/leetcode/91day-2/5.html"}},[t._v("【基础篇 - Day 5】 2020-11-05 - 232. 用栈实现队列（01. 数组，栈，队列 ）")])],1),t._v(" "),r("li",[t._v("[x] "),r("RouterLink",{attrs:{to:"/leetcode/91day-2/6.html"}},[t._v("【基础篇 - Day 6】 2020-11-06 - 768. 最多能完成排序的块 II（01. 数组，栈，队列 ）")])],1),t._v(" "),r("li",[t._v("[x] "),r("RouterLink",{attrs:{to:"/leetcode/91day-2/6-1.html"}},[t._v("739. 每日温度")])],1),t._v(" "),r("li",[t._v("[x] "),r("RouterLink",{attrs:{to:"/leetcode/91day-2/7.html"}},[t._v("【基础篇 - Day 7】 2020-11-07 - 24. 两两交换链表中的节点(链表)")])],1),t._v(" "),r("li",[t._v("[x] "),r("RouterLink",{attrs:{to:"/leetcode/91day-2/8.html"}},[t._v("【基础篇 - Day 8】 2020-11-08 - 61. 旋转链表（02. 链表）")])],1),t._v(" "),r("li",[t._v("[x] "),r("RouterLink",{attrs:{to:"/leetcode/91day-2/9.html"}},[t._v("【基础篇 - Day 9】 2020-11-09 - 109. 有序链表转换二叉搜索树（02. 链表 ）")])],1),t._v(" "),r("li",[t._v("[x] "),r("RouterLink",{attrs:{to:"/leetcode/91day-2/10.html"}},[t._v("【基础篇 - Day 10】 2020-11-010 - 160 相交链表（02. 链表 ）")])],1),t._v(" "),r("li",[t._v("[x] "),r("RouterLink",{attrs:{to:"/leetcode/91day-2/11.html"}},[t._v("【基础篇 - Day 11】 2020-11-11 - 142. 环形链表 II（02. 链表 ）")])],1),t._v(" "),r("li",[t._v("[x] "),r("RouterLink",{attrs:{to:"/leetcode/91day-2/12.html"}},[t._v("【基础篇 - Day 12】 2020-11-12 - 146. LRU 缓存机制（02.链表 ）")])],1),t._v(" "),r("li",[t._v("[x] "),r("RouterLink",{attrs:{to:"/leetcode/91day-2/13.html"}},[t._v("【基础篇 - Day 13】 2020-11-13 - 104. 二叉树的最大深度（03.树）")])],1),t._v(" "),r("li",[t._v("[x] "),r("RouterLink",{attrs:{to:"/leetcode/91day-2/14.html"}},[t._v("【基础篇 - Day 14】 2020-11-14 - 100. 相同的树（03. 树 ）")])],1),t._v(" "),r("li",[t._v("[x] "),r("RouterLink",{attrs:{to:"/leetcode/91day-2/15.html"}},[t._v("【基础篇 - Day 15】 2020-11-15 - 129. 求根到叶子节点数字之和（03.树）")])],1),t._v(" "),r("li",[t._v("[x] "),r("RouterLink",{attrs:{to:"/leetcode/91day-2/16.html"}},[t._v("【基础篇 - Day 16】 513. 找树左下角的值")])],1),t._v(" "),r("li",[t._v("[x] "),r("RouterLink",{attrs:{to:"/leetcode/91day-2/17.html"}},[t._v("【基础篇 - Day 17】 2020-11-17 - Offer 37. 序列化二叉树（03. 树）")])],1),t._v(" "),r("li",[t._v("[ ] "),r("RouterLink",{attrs:{to:"/leetcode/91day-2/17-1.html"}},[t._v("从前序与中序遍历序列构造二叉树")])],1),t._v(" "),r("li",[t._v("[ ] "),r("RouterLink",{attrs:{to:"/leetcode/91day-2/17-2.html"}},[t._v("从中序与后序遍历序列构造二叉树")])],1),t._v(" "),r("li",[t._v("[ ] "),r("RouterLink",{attrs:{to:"/leetcode/91day-2/17-3.html"}},[t._v("根据前序和后序遍历构造二叉树")])],1),t._v(" "),r("li",[t._v("[x] "),r("RouterLink",{attrs:{to:"/leetcode/91day-2/18.html"}},[t._v("【基础篇 - Day 18】 2020-11-18 - 987. 二叉树的垂序遍历（03. 树 ）")])],1),t._v(" "),r("li",[t._v("[x] "),r("RouterLink",{attrs:{to:"/leetcode/91day-2/19.html"}},[t._v("【基础篇 - Day 19】 2020-11-19 - 1. 两数之和")])],1),t._v(" "),r("li",[t._v("[x] "),r("RouterLink",{attrs:{to:"/leetcode/91day-2/19-1.html"}},[t._v("15. 三数之和")])],1),t._v(" "),r("li",[t._v("[x] "),r("RouterLink",{attrs:{to:"/leetcode/91day-2/19-2.html"}},[t._v("18. 四数之和")])],1),t._v(" "),r("li",[t._v("[x] "),r("RouterLink",{attrs:{to:"/leetcode/91day-2/20.html"}},[t._v("【基础篇 - Day 20】 2020-11-19 - 347. 前 K 个高频元素")])],1),t._v(" "),r("li",[t._v("[x] "),r("RouterLink",{attrs:{to:"/leetcode/91day-2/20-1.html"}},[t._v("215. 数组中的第 K 个最大元素")])],1),t._v(" "),r("li",[t._v("[x] "),r("RouterLink",{attrs:{to:"/leetcode/91day-2/21.html"}},[t._v("【基础篇 - Day 21】 447. 回旋镖的数量")])],1),t._v(" "),r("li",[t._v("[x] "),r("RouterLink",{attrs:{to:"/leetcode/91day-2/22.html"}},[t._v("【基础篇 - Day 22】 2020-11-21 - 3. 无重复字符的最长子串")])],1),t._v(" "),r("li",[t._v("[x] "),r("RouterLink",{attrs:{to:"/leetcode/91day-2/23.html"}},[t._v("【基础篇 - Day 23】 2020-11-23 - 30. 串联所有单词的子串")])],1),t._v(" "),r("li",[t._v("[x] "),r("RouterLink",{attrs:{to:"/leetcode/91day-2/24.html"}},[t._v("【基础篇 - Day 24】 2020-11-24 - 37. 解数独")])],1),t._v(" "),r("li",[t._v("[x] "),r("RouterLink",{attrs:{to:"/leetcode/91day-2/24-1.html"}},[t._v("36. 有效的数独")])],1),t._v(" "),r("li",[t._v("[x] "),r("RouterLink",{attrs:{to:"/leetcode/91day-2/25.html"}},[t._v("【基础篇 - Day 25】 2020-11-25 - 35. 搜索插入位置")])],1),t._v(" "),r("li",[t._v("[x] "),r("RouterLink",{attrs:{to:"/leetcode/91day-2/26.html"}},[t._v("【基础篇 - Day 26】 2020-11-26 - 74. 搜索二维矩阵")])],1),t._v(" "),r("li",[t._v("[x] "),r("RouterLink",{attrs:{to:"/leetcode/91day-2/27.html"}},[t._v("【基础篇 - Day 27】 2020-11-27 - 26. 删除排序数组中的重复项")])],1),t._v(" "),r("li",[t._v("[x] "),r("RouterLink",{attrs:{to:"/leetcode/91day-2/28.html"}},[t._v("【基础篇 - Day 28】 2020-11-28 - 876. 链表的中间结点")])],1),t._v(" "),r("li",[t._v("[x] "),r("RouterLink",{attrs:{to:"/leetcode/91day-2/29.html"}},[t._v("【基础篇 - Day 29】 2020-11-29 - 1052. 爱生气的书店老板")])],1),t._v(" "),r("li",[t._v("[x] "),r("RouterLink",{attrs:{to:"/leetcode/91day-2/30.html"}},[t._v("【基础篇 - Day 30】 2020-11-30 - 239. 滑动窗口最大值")])],1),t._v(" "),r("li",[t._v("[x] "),r("RouterLink",{attrs:{to:"/leetcode/91day-2/34.html"}},[t._v("【进阶篇 - Day 34】 2020-11-04 - 树的遍历系列（07. 高频面试题 ）")])],1),t._v(" "),r("li",[t._v("[x] "),r("RouterLink",{attrs:{to:"/leetcode/91day-2/35.html"}},[t._v("【进阶篇 - Day 35】 2020-12-05 -反转链表系列（07. 高频面试题 ）")])],1),t._v(" "),r("li",[t._v("[x] "),r("RouterLink",{attrs:{to:"/leetcode/91day-2/36.html"}},[t._v("【进阶篇 - Day 36】 2020-12-06 位运算系列（07. 高频面试题 )")])],1),t._v(" "),r("li",[t._v("[x] "),r("RouterLink",{attrs:{to:"/leetcode/91day-2/37.html"}},[t._v("【进阶篇 - Day 37】 2020-12-07 -动态规划系列（07. 高频面试题 ）")])],1),t._v(" "),r("li",[t._v("[x] "),r("RouterLink",{attrs:{to:"/leetcode/91day-2/38.html"}},[t._v("【进阶篇 - Day 38】 2020-12-08 有效括号（07. 高频面试题 ）")])],1),t._v(" "),r("li",[t._v("[x] "),r("RouterLink",{attrs:{to:"/leetcode/91day-2/39.html"}},[t._v("【进阶篇 - Day 39】 2020-12-09 设计系列（07. 高频面试题 ）")])],1),t._v(" "),r("li",[t._v("[ ] "),r("RouterLink",{attrs:{to:"/leetcode/91day-2/40.html"}},[t._v("【进阶篇 - Day 40】 2020-12-10 前缀和系列（07. 高频面试题 ）")])],1),t._v(" "),r("li",[t._v("[ ] "),r("RouterLink",{attrs:{to:"/leetcode/91day-2/41.html"}},[t._v("【进阶篇 - Day 41】 2020-12-10 - 208. 实现 Trie（02. Trie ）")])],1),t._v(" "),r("li",[t._v("[ ] "),r("RouterLink",{attrs:{to:"/leetcode/91day-2/42.html"}},[t._v("【进阶篇 - Day 42】 2020-12-12 - 677. 键盘映射（02.Trie ）")])],1),t._v(" "),r("li",[t._v("[ ] "),r("RouterLink",{attrs:{to:"/leetcode/91day-2/43.html"}},[t._v("【进阶篇 - Day 43】 2020-12-13 - 面试题 17.17 多次搜索（02. trie ）")])],1),t._v(" "),r("li",[t._v("[ ] "),r("RouterLink",{attrs:{to:"/leetcode/91day-2/44.html"}},[t._v("【进阶篇 - Day 44】 2020-12-13 - 547. 朋友圈")])],1),t._v(" "),r("li",[t._v("[ ] "),r("RouterLink",{attrs:{to:"/leetcode/91day-2/45.html"}},[t._v("【进阶篇 - Day 45】 2020-12-15 - 924. 尽量减少恶意软件的传播")])],1),t._v(" "),r("li",[t._v("[ ] "),r("RouterLink",{attrs:{to:"/leetcode/91day-2/46.html"}},[t._v("【进阶篇 - Day 46】 2020-12-16 - 1319. 连通网络的操作次数")])],1),t._v(" "),r("li",[t._v("[ ] "),r("RouterLink",{attrs:{to:"/leetcode/91day-2/47.html"}},[t._v("【进阶篇 - Day 47】 2020-12-17 - 1206. 设计跳表")])],1),t._v(" "),r("li",[t._v("[ ] "),r("RouterLink",{attrs:{to:"/leetcode/91day-2/48.html"}},[t._v("【进阶篇 - Day 48】 2020-12-18 - 814. 二叉树剪枝")])],1),t._v(" "),r("li",[t._v("[x] "),r("RouterLink",{attrs:{to:"/leetcode/91day-2/49.html"}},[t._v("【进阶篇 - Day 49】 2020-12-19 - 39. 组合总和（03. 剪枝 ）")])],1),t._v(" "),r("li",[t._v("[x] "),r("RouterLink",{attrs:{to:"/leetcode/91day-2/50.html"}},[t._v("【进阶篇 - Day 50】 2020-12-20 - 40. 组合总和 II（05. 剪枝）")])],1),t._v(" "),r("li",[t._v("[x] "),r("RouterLink",{attrs:{to:"/leetcode/91day-2/51.html"}},[t._v("【进阶篇 - Day 51】 2020-12-21 - 47. 全排列 II（05.剪枝 ）")])],1),t._v(" "),r("li",[t._v("[ ] "),r("RouterLink",{attrs:{to:"/leetcode/91day-2/52.html"}},[t._v("【进阶篇 - Day 52】 2020-12-22 - 28. 实现 strStr()-BF&RK")])],1),t._v(" "),r("li",[t._v("[ ] "),r("RouterLink",{attrs:{to:"/leetcode/91day-2/53.html"}},[t._v("【进阶篇 - Day 53】 2020-12-23 - 28. 实现 strStr()-KMP")])],1),t._v(" "),r("li",[t._v("[x] "),r("RouterLink",{attrs:{to:"/leetcode/91day-2/54.html"}},[t._v("【进阶篇 - Day 54】 2020-12-24 - 215. 数组中的第 K 个最大元素")])],1),t._v(" "),r("li",[t._v("[x] "),r("RouterLink",{attrs:{to:"/leetcode/91day-2/55.html"}},[t._v("【进阶篇 - Day 55】 2020-12-25 - 1046 最后一块石头的重量")])],1)])])}),[],!1,null,null,null);e.default=o.exports}}]);