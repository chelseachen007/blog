(window.webpackJsonp=window.webpackJsonp||[]).push([[150],{527:function(t,e,a){"use strict";a.r(e);var r=a(42),o=Object(r.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"前言"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#前言"}},[t._v("#")]),t._v(" 前言")]),t._v(" "),a("h2",{attrs:{id:"基础篇"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#基础篇"}},[t._v("#")]),t._v(" 基础篇")]),t._v(" "),a("h4",{attrs:{id:"讲义"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#讲义"}},[t._v("#")]),t._v(" 讲义")]),t._v(" "),a("ul",[a("li",[a("p",[a("a",{attrs:{href:"https://github.com/leetcode-pp/91alg-1/blob/master/basic-01.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("【basic-01】01.数组，栈，队列"),a("OutboundLink")],1)])]),t._v(" "),a("li",[a("p",[a("a",{attrs:{href:"https://github.com/leetcode-pp/91alg-1/blob/master/basic-02.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("【basic-02】02.链表"),a("OutboundLink")],1)])]),t._v(" "),a("li",[a("p",[a("a",{attrs:{href:"https://github.com/leetcode-pp/91alg-1/blob/master/basic-03.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("【basic-03】03.树"),a("OutboundLink")],1)])]),t._v(" "),a("li",[a("p",[a("a",{attrs:{href:"https://github.com/leetcode-pp/91alg-1/blob/master/basic-04.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("【basic-04】04.哈希表"),a("OutboundLink")],1)])]),t._v(" "),a("li",[a("p",[a("a",{attrs:{href:"https://lucifer.ren/blog/2020/05/26/91algo-basic-05.two-pointer/",target:"_blank",rel:"noopener noreferrer"}},[t._v("【basic-05】05.双指针"),a("OutboundLink")],1)]),t._v(" "),a("h3",{attrs:{id:"进阶篇"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#进阶篇"}},[t._v("#")]),t._v(" 进阶篇")])]),t._v(" "),a("li",[a("p",[a("a",{attrs:{href:"https://github.com/leetcode-pp/91alg-1/blob/master/advanced-01.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("【91 算法-进阶篇】01.并查集"),a("OutboundLink")],1)])]),t._v(" "),a("li",[a("p",[a("a",{attrs:{href:"https://github.com/leetcode-pp/91alg-1/blob/master/Trie.pdf",target:"_blank",rel:"noopener noreferrer"}},[t._v("【91 算法-进阶篇】02.Trie（PDF）"),a("OutboundLink")],1),t._v(" "),a("a",{attrs:{href:"https://github.com/leetcode-pp/91alg-1/blob/master/advanced-trie.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("【91 算法-进阶篇】02.Trie（Markdown）"),a("OutboundLink")],1)])]),t._v(" "),a("li",[a("p",[a("a",{attrs:{href:"https://github.com/leetcode-pp/91alg-1/blob/master/advanced-kmp.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("【91 算法-进阶篇】03.KMP & RK"),a("OutboundLink")],1)])]),t._v(" "),a("li",[a("p",[a("a",{attrs:{href:"https://github.com/leetcode-pp/91alg-1/blob/master/advanced-skiplist.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("【91 算法-进阶篇】04.跳表"),a("OutboundLink")],1)])]),t._v(" "),a("li",[a("p",[a("a",{attrs:{href:"https://github.com/leetcode-pp/91alg-1/blob/master/advanced_prune.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("【91 算法-进阶篇】05.剪枝"),a("OutboundLink")],1)])]),t._v(" "),a("li",[a("p",[a("a",{attrs:{href:"https://github.com/leetcode-pp/91alg-1/blob/master/advanced-07.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("【91 算法-进阶篇】07.高频面试题"),a("OutboundLink")],1)])]),t._v(" "),a("li",[a("p",[a("a",{attrs:{href:"https://github.com/leetcode-pp/91alg-1/blob/master/advanced-heap.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("【91 算法-进阶篇】08.堆"),a("OutboundLink")],1)])])]),t._v(" "),a("h3",{attrs:{id:"专题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#专题"}},[t._v("#")]),t._v(" 专题")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://github.com/leetcode-pp/91alg-1/blob/master/topic-binary-search.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("【91 算法-专题篇】01.二分法"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://github.com/leetcode-pp/91alg-1/blob/master/topic-slidingwindow.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("【91 算法-专题篇】02.滑动窗口"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://github.com/leetcode-pp/91alg-1/blob/master/topic-bit.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("【91 算法-专题篇】03.位运算"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://github.com/leetcode-pp/91alg-1/blob/master/topic-search.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("【91 算法-专题篇】04.搜索"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://github.com/leetcode-pp/91alg-1/blob/master/topic-packages.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("【91 算法-专题篇】05.背包问题"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://github.com/leetcode-pp/91alg-1/blob/master/topic-dp.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("【91 算法-专题篇】06.动态规划"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://github.com/leetcode-pp/91alg-1/blob/master/divide.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("【91 算法-专题篇】07.分治"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://github.com/leetcode-pp/91alg-1/blob/master/greedy.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("【91 算法-专题篇】08.贪心"),a("OutboundLink")],1)])]),t._v(" "),a("h2",{attrs:{id:"题目"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#题目"}},[t._v("#")]),t._v(" 题目")]),t._v(" "),a("ul",[a("li",[t._v("[x] "),a("RouterLink",{attrs:{to:"/leetcode/91day-1/91day_one.html"}},[t._v("【day-01】66.加一")])],1),t._v(" "),a("li",[t._v("[x] "),a("RouterLink",{attrs:{to:"/leetcode/91day-1/91day_two.html"}},[t._v("【day-02】75.颜色分类")])],1),t._v(" "),a("li",[t._v("[x] "),a("RouterLink",{attrs:{to:"/leetcode/91day-1/91day_three.html"}},[t._v("【day-03】1381.设计一个支持增量操作的栈")])],1),t._v(" "),a("li",[t._v("[x] "),a("RouterLink",{attrs:{to:"/leetcode/91day-1/91day_four.html"}},[t._v("【day-04】394.字符串解码")])],1),t._v(" "),a("li",[t._v("[x] "),a("RouterLink",{attrs:{to:"/leetcode/91day-1/91day_five.html"}},[t._v("【day-05】232.用栈实现队列")])],1),t._v(" "),a("li",[t._v("[x] "),a("RouterLink",{attrs:{to:"/leetcode/91day-1/91day_six.html"}},[t._v("【day-06】380.常数时间插入、删除和获取随机元素")])],1),t._v(" "),a("li",[t._v("[x] "),a("RouterLink",{attrs:{to:"/leetcode/91day-1/91day_seven.html"}},[t._v("【day-07】206.反转链表")])],1),t._v(" "),a("li",[t._v("[ ] "),a("RouterLink",{attrs:{to:"/leetcode/91day-1/91day_eight.html"}},[t._v("【day-08】430.扁平化多级双向链表")])],1),t._v(" "),a("li",[t._v("[ ] "),a("RouterLink",{attrs:{to:"/leetcode/91day-1/91day_nine.html"}},[t._v("【day-09】109.有序链表转换二叉搜索树")])],1),t._v(" "),a("li",[t._v("[x] "),a("RouterLink",{attrs:{to:"/leetcode/91day-1/91day_ten.html"}},[t._v("【day-10】160.相交链表")])],1),t._v(" "),a("li",[t._v("[x] "),a("RouterLink",{attrs:{to:"/leetcode/91day-1/91day_11.html"}},[t._v("【day-11】142.环形链表 II")])],1),t._v(" "),a("li",[t._v("[ ] "),a("RouterLink",{attrs:{to:"/leetcode/91day-1/91day_12.html"}},[t._v("【day-12】146.LRU 缓存机制")])],1),t._v(" "),a("li",[t._v("[x] "),a("RouterLink",{attrs:{to:"/leetcode/91day-1/91day_13.html"}},[t._v("【day-13】104.二叉树的最大深度")])],1),t._v(" "),a("li",[t._v("[x] "),a("RouterLink",{attrs:{to:"/leetcode/91day-1/91day_14.html"}},[t._v("【day-14】100.相同的树")])],1),t._v(" "),a("li",[t._v("[x] "),a("RouterLink",{attrs:{to:"/leetcode/91day-1/91day_15.html"}},[t._v("【day-15】129.求根到叶子节点数字之和")])],1),t._v(" "),a("li",[t._v("[x] "),a("RouterLink",{attrs:{to:"/leetcode/91day-1/91day_16.html"}},[t._v("【day-16】513.找树左下角的值")])],1),t._v(" "),a("li",[t._v("[x] "),a("RouterLink",{attrs:{to:"/leetcode/91day-1/91day_17.html"}},[t._v("【day-17】105.从前序与中序遍历序列构造二叉树")])],1),t._v(" "),a("li",[t._v("[x] "),a("RouterLink",{attrs:{to:"/leetcode/91day-1/91day_18.html"}},[t._v("【day-18】124.二叉树中的最大路径和")])],1),t._v(" "),a("li",[t._v("[x] "),a("RouterLink",{attrs:{to:"/leetcode/91day-1/91day_19.html"}},[t._v("【day-19】1.两数之和")])],1),t._v(" "),a("li",[t._v("[x] "),a("RouterLink",{attrs:{to:"/leetcode/91day-1/91day_20.html"}},[t._v("【day-20】447.回旋镖的数量")])],1),t._v(" "),a("li",[t._v("[x] "),a("RouterLink",{attrs:{to:"/leetcode/91day-1/91day_21.html"}},[t._v("【day-21】36.有效的数独")])],1),t._v(" "),a("li",[t._v("[x] "),a("RouterLink",{attrs:{to:"/leetcode/91day-1/91day_22.html"}},[t._v("【day-22】645.错误的集合")])],1),t._v(" "),a("li",[t._v("[ ] "),a("RouterLink",{attrs:{to:"/leetcode/91day-1/91day_23.html"}},[t._v("【day-23】面试题 04.01.节点间通路")])],1),t._v(" "),a("li",[t._v("[ ] "),a("RouterLink",{attrs:{to:"/leetcode/91day-1/91day_24.html"}},[t._v("【day-24】149.直线上最多的点数")])],1),t._v(" "),a("li",[t._v("[x] "),a("RouterLink",{attrs:{to:"/leetcode/91day-1/91day_25.html"}},[t._v("【day-25】11.盛最多水的容器")])],1),t._v(" "),a("li",[t._v("[x] "),a("RouterLink",{attrs:{to:"/leetcode/91day-1/91day_26.html"}},[t._v("【day-26】875.爱吃香蕉的珂珂")])],1),t._v(" "),a("li",[t._v("[x] "),a("RouterLink",{attrs:{to:"/leetcode/91day-1/91day_27.html"}},[t._v("【day-27】26.删除排序数组中的重复项")])],1),t._v(" "),a("li",[t._v("[x] "),a("RouterLink",{attrs:{to:"/leetcode/91day-1/91day_28.html"}},[t._v("【Day 28】两数之和 II - 输入有序数组")])],1),t._v(" "),a("li",[t._v("[x] "),a("RouterLink",{attrs:{to:"/leetcode/91day-1/91day_29.html"}},[t._v("【day-29】接雨水")])],1)]),t._v(" "),a("h3",{attrs:{id:"二分法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#二分法"}},[t._v("#")]),t._v(" 二分法")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("[x]  "),a("RouterLink",{attrs:{to:"/leetcode/91day-1/91day_65.html"}},[t._v("【Day65 - 278. 第一个错误的版本】")])],1)]),t._v(" "),a("li",[a("p",[t._v("[x] "),a("RouterLink",{attrs:{to:"/leetcode/91day-1/91day_66.html"}},[t._v("【Day66 - 162. 寻找峰值】")])],1)]),t._v(" "),a("li",[a("p",[t._v("[x] "),a("RouterLink",{attrs:{to:"/leetcode/91day-1/91day_67.html"}},[t._v("【Day67 - 34. 在排序数组中查找元素的第一个和最后一个位置】")])],1)]),t._v(" "),a("li",[a("p",[t._v("[x] "),a("RouterLink",{attrs:{to:"/leetcode/91day-1/91day_68.html"}},[t._v("【Day68 - 4. 寻找两个正序数组的中位数】")])],1)]),t._v(" "),a("li",[a("p",[t._v("[ ] "),a("RouterLink",{attrs:{to:"/leetcode/91day-1/91day_69.html"}},[t._v("【Day69 - 222. 完全二叉树的节点个数】")])],1)])]),t._v(" "),a("h3",{attrs:{id:"位运算"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#位运算"}},[t._v("#")]),t._v(" 位运算")]),t._v(" "),a("ul",[a("li",[t._v("[x] "),a("RouterLink",{attrs:{to:"/leetcode/91day-1/91day_74.html"}},[t._v("【Day74 - 268. 缺失数字】")])],1),t._v(" "),a("li",[t._v("[ ] "),a("RouterLink",{attrs:{to:"/leetcode/91day-1/91day_75.html"}},[t._v("【Day75 - 78. 子集】")])],1),t._v(" "),a("li",[t._v("[ ] "),a("RouterLink",{attrs:{to:"/leetcode/91day-1/91day_76.html"}},[t._v("【Day76 1254. 统计封闭岛屿的数目】")])],1),t._v(" "),a("li",[t._v("[ ] "),a("RouterLink",{attrs:{to:"/leetcode/91day-1/91day_77.html"}},[t._v("【Day77 51. N皇后】")])],1),t._v(" "),a("li",[t._v("[ ] "),a("RouterLink",{attrs:{to:"/leetcode/91day-1/91day_78.html"}},[t._v("【Day78 - 130. 被围绕的区域】")])],1),t._v(" "),a("li",[t._v("[ ] "),a("RouterLink",{attrs:{to:"/leetcode/91day-1/91day_79.html"}},[t._v("【Day79 - 827. 最大人工岛】")])],1)])])}),[],!1,null,null,null);e.default=o.exports}}]);